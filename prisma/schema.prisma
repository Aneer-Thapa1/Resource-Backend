generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bills {
  bill_ID       Int       @id @default(autoincrement())
  entry_date    DateTime  @default(now())
  bill_no       String?   @db.VarChar(255)
  bill_amount   Float?    @db.Float
  TDS           Float?    @db.Float
  bill_date     DateTime? @db.Date
  invoice_no    String?   @db.VarChar(255)
  actual_amount Float?    @db.Float
  paid_amount   Float?    @db.Float
  left_amount   Float?    @db.Float
  unit_price    Int?
  quantity      Int?
  vendors       vendors?  @relation(fields: [vendor_ID], references: [vendor_id], onDelete: Cascade)
  vendor_ID     Int?
  items         items?    @relation(fields: [item_id], references: [item_id], onDelete: Cascade)
  item_id       Int?

  @@index([vendor_ID, item_id])
}

model vendors {
  vendor_id          Int       @id @default(autoincrement())
  vendor_name        String?   @db.VarChar(255)
  vat_number         String?   @db.VarChar(255)
  vendor_contact     Int?
  total_payment      Float?    @db.Float
  pending_payment    Float?    @db.Float
  last_purchase_date DateTime? @db.Date
  last_paid          DateTime? @db.Date
  payment_duration   Int?
  next_payment_date  DateTime? @db.Date
  black_list         Boolean?
  bills              bills[]
}

model users {
  user_id    Int       @id @default(autoincrement())
  user_name  String    @db.VarChar(95)
  user_email String    @unique @db.VarChar(65)
  password   String    @db.VarChar(255)
  role       String    @default("user")
  otp        String?
  otp_expiry DateTime?
}

model items {
  item_id             Int              @id @default(autoincrement())
  item_name           String?          @db.VarChar(255)
  measuring_unit      String?          @db.VarChar(50)
  total_purchased     Int?
  quantity            Int?
  low_limit           Int?
  recent_purchase     DateTime?
  unit_price          Int?
  Status              Boolean?
  category            category?        @relation(fields: [category_id], references: [category_id])
  category_id         Int?
  itemCategory        itemCategory?    @relation(fields: [item_category_id], references: [item_category_id])
  item_category_id    Int?
  productCategory     productCategory? @relation(fields: [product_category_id], references: [product_category_id])
  product_category_id Int?
  bills               bills[]
}

model category {
  category_id   Int     @id @default(autoincrement())
  category_name String  @unique
  items         items[]
}

model itemCategory {
  item_category_id   Int     @id @default(autoincrement())
  item_category_name String  @unique
  items              items[]
}

model productCategory {
  product_category_id   Int     @id @default(autoincrement())
  product_category_name String  @unique
  items                 items[]
}
